"""
Django settings for historymap project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from configparser import ConfigParser

CONF = "/etc/historymap/historymap.conf"
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/


ALLOWED_HOSTS = ['oilspill.ocf.berkeley.edu', '0.0.0.0']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'historymap.users',
    'historymap.main',
    'historymap.wikiparse',
)

MIDDLEWARE = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'historymap.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['main/templates/','users/templates/', 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'historymap.wsgi.application'



#PASSWORD Requirements
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', 
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 9,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },        
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
    {
        'NAME': 'historymap.users.validators.NumberValidator', 
    }, 
    {
        'NAME': 'historymap.users.validators.SpecialCharacterValidator', 
    }, 
    {
        'NAME': 'historymap.users.validators.UpperCaseValidator', 
    },
    {
        'NAME': 'historymap.users.validators.LowerCaseValidator', 
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

CRISPY_TEMPLATE_PACK = 'bootstrap3'

# User Accounts
LOGIN_REDIRECT_URL = 'home'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
conf = ConfigParser()
conf.read(CONF)
STATIC_URL = conf.get('django', 'static_url')

#Settings loaded from config file
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = conf.get('django', 'secret')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = conf.get('django', 'debug')

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

"""
DATABASES = {
        'default': {
            'ENGINE': conf.get('mysql', 'engine'), 
            'OPTIONS': {
                'sql_mode': conf.get('mysql', 'sql_mode'), 
            },
            'NAME': conf.get('mysql', 'name'), 
            'USER': conf.get('mysql','user'),
            'PASSWORD': conf.get('mysql', 'password'),
            'HOST': conf.get('mysql', 'host'),
            'PORT': conf.get('mysql', 'port'),
            }
        }
        """
